{
    "openapi": "3.0.2",
    "info": {
        "title": "ChimichangApp",
        "description": "\n    ChimichangApp API helps you do awesome stuff. ðŸš€\n\n    ## Items\n\n    You can **read items**.\n\n    ## Users\n\n    You will be able to:\n\n    * **Create users** (_not implemented_).\n    * **Read users** (_not implemented_).\n    ",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Deadpoolio the Amazing",
            "url": "http://x-force.example.com/contact/",
            "email": "dp@x-force.example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "paths": {
        "/items/": {
            "get": {
                "summary": "Read Items",
                "operationId": "read_items_items__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Item",
                "description": "api for creating an item",
                "operationId": "create_item_items__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Item"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "respond if creation is successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "Item": {
                "title": "Item",
                "required": [
                    "name",
                    "price",
                    "myDict"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "type": "number"
                    },
                    "is_offer": {
                        "title": "Is Offer",
                        "type": "boolean"
                    },
                    "myDict": {
                        "title": "Mydict",
                        "type": "object"
                    }
                }
            },
            "ResponseModel": {
                "title": "ResponseModel",
                "required": [
                    "ans",
                    "ans_1"
                ],
                "type": "object",
                "properties": {
                    "ans": {
                        "title": "Ans",
                        "type": "string"
                    },
                    "ans_1": {
                        "title": "Ans 1",
                        "type": "string"
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            }
        }
    }
}
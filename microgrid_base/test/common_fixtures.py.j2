{# serve as template for our fixtures. #}
{# for better coding experience, refuse to use yaml but embrace python (autocomplete) #}
{# render this to ".py.tmp" first, then modify it. #}

{% macro createTestFixture(className)%}
@fixture
def 测试{{className}}():
    val = {{className}}(
{{caller()}}
    )
    return val
{% endmacro%}

from pytest import fixture
import sys
sys.path.append("../")
from ies_optim import *

{% for infoClassName, infoData in data.items() %}
    {% if infoClassName != "计算参数" %}
        {% set devInfoClassName = infoClassName+"信息"%}
        {% set devIDClassName = infoClassName+"ID"%}

{{infoClassName.center(70, "=")}}

        {% call createTestFixture(devInfoClassName) %}
            {%for infoName, infoValue in infoData.items()%}
        {{infoName}} = {{repr(infoValue)}},
            {%endfor%}
        {% endcall %}

        {% call createTestFixture(devIDClassName) %}
            {% for k,v in id_data[infoClassName] %}
        {{k}} = {{v}},
            {% endfor %}
        {% endcall %}

    {% else%}

@fixture
def {{infoClassName}}():
    return ...
    {% endif %}

{% endfor %}

from pydantic import BaseModel
import networkx

# when to check topology:
# 	1.  Building topology
# 	2.  Importing topology

class 拓扑图(BaseModel):
    def __init__(self, **kwargs):
        self.node_count = 0
        self.graph = networkx.Graph(**kwargs)

    def add_node(self, **kwargs):
        self.graph.add_node(self.node_count,**kwargs)
        self.node_count+=1
    # monotonically adding a node.
    def to_json(self,) -> dict:
        return json_data
    def from_json(self,json_data):dict:
        # load data to graph
    # with checking.
    # iterate through all nodes.
# 下面的都需要传拓扑图进来

class 节点(BaseModel):
    def __init__(self, graph:networkx.Graph, **kwargs):
        self.graph = graph
        self.kwargs = kwargs

class 母线(节点):
    def __init__(self, graph:networkx.Graph, **kwargs):
        super().__init__(graph, **kwargs)

class 设备(节点):
    def __init__(self, graph:networkx.Graph, **kwargs):
        super().__init__(graph, **kwargs)
